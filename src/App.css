import { useState } from 'react';

// Mock components - replace with your actual components
const WideDiv = () => <div className="w-full h-20 bg-gray-200"></div>;
const Navbar = () => (
  <nav className="bg-white shadow-sm p-4">
    <div className="container mx-auto">
      <h2 className="text-xl font-bold">Your Blog</h2>
    </div>
  </nav>
);

export default function BlogLayout() {
  const [email, setEmail] = useState('');
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    
    // Enhanced Web3 subscription with email sending
    try {
      // Simulate API call to send email
      const response = await fetch('/api/subscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email: email,
          source: 'blog_subscription',
          timestamp: new Date().toISOString(),
          web3_address: generateMockWeb3Address()
        })
      }).catch(() => {
        // Fallback for demo - simulate successful subscription
        return { ok: true };
      });

      await new Promise(resolve => setTimeout(resolve, 2000));
      
      if (response.ok) {
        setIsSubscribed(true);
        setEmail('');
        // Log subscription for demo purposes
        console.log(`Subscription successful for: ${email}`);
      }
    } catch (error) {
      console.error('Subscription error:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const generateMockWeb3Address = () => {
    return '0x' + Math.random().toString(16).substr(2, 40);
  };

  // Enhanced blog posts array with 16 posts
  const blogPosts = [
   {
     
    },
    {
      id: 2,
      title: "Decentralized Finance: The Future of Banking",
      date: "May 12, 2025",
      readTime: "7 min read",
      category: "DeFi",
      imageUrl: "https://images.unsplash.com/photo-1639762681485-074b7f938ba0?w=500&h=300&fit=crop",
      slug: "/blog/defi-future-banking"
    },
    {
      id: 3,
      title: "NFT Marketplaces: Beyond Digital Art",
      date: "May 10, 2025",
      readTime: "4 min read",
      category: "NFTs",
      imageUrl: "https://images.unsplash.com/photo-1640161704729-cbe966a08476?w=500&h=300&fit=crop",
      slug: "/blog/nft-marketplaces-beyond-art"
    },
    {
      id: 4,
      title: "Smart Contracts: Automating Trust in Web3",
      date: "May 8, 2025",
      readTime: "6 min read",
      category: "Blockchain",
      imageUrl: "https://images.unsplash.com/photo-1639322537228-f710d846310a?w=500&h=300&fit=crop",
      slug: "/blog/smart-contracts-web3-trust"
    },
    {
      id: 5,
      title: "The Metaverse Economy: Virtual Real Estate Boom",
      date: "May 5, 2025",
      readTime: "8 min read",
      category: "Metaverse",
      imageUrl: "https://images.unsplash.com/photo-1617802690992-15d93263d3a9?w=500&h=300&fit=crop",
      slug: "/blog/metaverse-virtual-real-estate"
    },
    {
      id: 6,
      title: "Cryptocurrency Trading: Advanced Strategies",
      date: "May 3, 2025",
      readTime: "9 min read",
      category: "Trading",
      imageUrl: "https://images.unsplash.com/photo-1640340434855-6084b1f4901c?w=500&h=300&fit=crop",
      slug: "/blog/crypto-trading-strategies"
    },
    {
      id: 7,
      title: "Web3 Security: Protecting Your Digital Assets",
      date: "May 1, 2025",
      readTime: "6 min read",
      category: "Security",
      imageUrl: "https://images.unsplash.com/photo-1563013544-824ae1b704d3?w=500&h=300&fit=crop",
      slug: "/blog/web3-security-digital-assets"
    },
    {
      id: 8,
      title: "Layer 2 Solutions: Scaling Ethereum",
      date: "April 28, 2025",
      readTime: "7 min read",
      category: "Ethereum",
      imageUrl: "https://images.unsplash.com/photo-1639762681057-408e52192e55?w=500&h=300&fit=crop",
      slug: "/blog/layer2-scaling-ethereum"
    },
    {
      id: 9,
      title: "DAO Governance: Decentralized Decision Making",
      date: "April 25, 2025",
      readTime: "5 min read",
      category: "Governance",
      imageUrl: "https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=500&h=300&fit=crop",
      slug: "/blog/dao-governance-decisions"
    },
    {
      id: 10,
      title: "Cross-Chain Bridges: Connecting Blockchains",
      date: "April 22, 2025",
      readTime: "6 min read",
      category: "Infrastructure",
      imageUrl: "https://images.unsplash.com/photo-1518186285589-2f7649de83e0?w=500&h=300&fit=crop",
      slug: "/blog/cross-chain-bridges"
    },
    {
      id: 11,
      title: "Web3 Gaming: Play-to-Earn Revolution",
      date: "April 20, 2025",
      readTime: "8 min read",
      category: "Gaming",
      imageUrl: "https://images.unsplash.com/photo-1542751371-adc38448a05e?w=500&h=300&fit=crop",
      slug: "/blog/web3-gaming-play-to-earn"
    },
    {
      id: 12,
      title: "Decentralized Storage: IPFS and Beyond",
      date: "April 18, 2025",
      readTime: "5 min read",
      category: "Storage",
      imageUrl: "https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=500&h=300&fit=crop",
      slug: "/blog/decentralized-storage-ipfs"
    },
    {
      id: 13,
      title: "Tokenomics: Designing Sustainable Crypto Economics",
      date: "April 15, 2025",
      readTime: "7 min read",
      category: "Economics",
      imageUrl: "https://images.unsplash.com/photo-1559526324-4b87b5e36e44?w=500&h=300&fit=crop",
      slug: "/blog/tokenomics-crypto-economics"
    },
    {
      id: 14,
      title: "Web3 Identity: Self-Sovereign Digital Identity",
      date: "April 12, 2025",
      readTime: "6 min read",
      category: "Identity",
      imageUrl: "https://images.unsplash.com/photo-1614064641938-3bbee52942c7?w=500&h=300&fit=crop",
      slug: "/blog/web3-digital-identity"
    },
    {
      id: 15,
      title: "Quantum Computing vs Blockchain Security",
      date: "April 10, 2025",
      readTime: "9 min read",
      category: "Quantum",
      imageUrl: "https://images.unsplash.com/photo-1635070041078-e363dbe005cb?w=500&h=300&fit=crop",
      slug: "/blog/quantum-blockchain-security"
    },
    {
      id: 16,
      title: "The Future of Work in Web3",
      date: "April 8, 2025",
      readTime: "8 min read",
      category: "Future of Work",
      imageUrl: "https://images.unsplash.com/photo-1553028826-f4804a6dba3b?w=500&h=300&fit=crop",
      slug: "/blog/future-work-web3"
    }
  ];

  return (
    <>
      <Navbar />
      <div className="min-h-screen bg-gray-50">
        {/* Enhanced Hero Section with Complex SVG Background */}
        <div className="relative py-32 lg:py-48 overflow-hidden">
          {/* Multi-layered Background */}
          <div 
            className="absolute inset-0 bg-cover bg-center bg-fixed"
            style={{ 
              backgroundImage: "url('https://images.unsplash.com/photo-1451187580459-43490279c0fa?w=2000&h=1200&fit=crop')" 
            }}
          />
          
          {/* Gradient Overlays */}
          <div className="absolute inset-0 bg-gradient-to-br from-indigo-900/90 via-purple-900/80 to-pink-900/70"></div>
          <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent"></div>
          <div className="absolute inset-0 bg-gradient-to-r from-blue-900/30 via-transparent to-purple-900/30"></div>

          {/* Advanced SVG Background */}
          <div className="absolute inset-0 overflow-hidden">
            <svg className="absolute inset-0 w-full h-full" viewBox="0 0 1200 800" preserveAspectRatio="xMidYMid slice">
              <defs>
                {/* Advanced Patterns */}
                <pattern id="neuralnets" x="0" y="0" width="120" height="120" patternUnits="userSpaceOnUse">
                  <circle cx="20" cy="20" r="2" fill="white" opacity="0.3">
                    <animate attributeName="opacity" values="0.1;0.6;0.1" dur="4s" repeatCount="indefinite" />
                  </circle>
                  <circle cx="60" cy="40" r="1.5" fill="white" opacity="0.2">
                    <animate attributeName="opacity" values="0.2;0.5;0.2" dur="6s" repeatCount="indefinite" />
                  </circle>
                  <circle cx="100" cy="20" r="2.5" fill="white" opacity="0.25">
                    <animate attributeName="opacity" values="0.15;0.7;0.15" dur="5s" repeatCount="indefinite" />
                  </circle>
                  <line x1="20" y1="20" x2="60" y2="40" stroke="white" strokeWidth="0.5" opacity="0.2" />
                  <line x1="60" y1="40" x2="100" y2="20" stroke="white" strokeWidth="0.5" opacity="0.2" />
                </pattern>

                <pattern id="hextech" x="0" y="0" width="80" height="80" patternUnits="userSpaceOnUse">
                  <polygon points="40,10 60,25 60,55 40,70 20,55 20,25" 
                           fill="none" stroke="white" strokeWidth="0.5" opacity="0.15" />
                  <circle cx="40" cy="40" r="3" fill="white" opacity="0.2">
                    <animate attributeName="r" values="2;4;2" dur="8s" repeatCount="indefinite" />
                  </circle>
                </pattern>

                {/* Gradients */}
                <radialGradient id="pulseGradient" cx="50%" cy="50%" r="50%">
                  <stop offset="0%" stopColor="#60a5fa" stopOpacity="0.6" />
                  <stop offset="50%" stopColor="#a855f7" stopOpacity="0.3" />
                  <stop offset="100%" stopColor="#ec4899" stopOpacity="0.1" />
                </radialGradient>

                <linearGradient id="flowGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%" stopColor="#3b82f6" stopOpacity="0.3" />
                  <stop offset="33%" stopColor="#8b5cf6" stopOpacity="0.2" />
                  <stop offset="66%" stopColor="#ec4899" stopOpacity="0.3" />
                  <stop offset="100%" stopColor="#f59e0b" stopOpacity="0.2" />
                </linearGradient>
              </defs>

              {/* Background Patterns */}
              <rect width="1200" height="800" fill="url(#neuralnets)" />
              <rect width="1200" height="800" fill="url(#hextech)" />

              {/* Floating Data Streams */}
              {[...Array(20)].map((_, i) => {
                const startX = Math.random() * 1200;
                const startY = Math.random() * 800;
                const endX = startX + (Math.random() - 0.5) * 400;
                const endY = startY + (Math.random() - 0.5) * 400;
                
                return (
                  <g key={`stream-${i}`}>
                    <path
                      d={`M ${startX} ${startY} Q ${startX + (endX - startX) * 0.5} ${startY - 50} ${endX} ${endY}`}
                      stroke="url(#flowGradient)"
                      strokeWidth="2"
                      fill="none"
                      opacity="0.4"
                    >
                      <animate
                        attributeName="stroke-dasharray"
                        values="0,100;50,50;100,0"
                        dur={`${8 + Math.random() * 12}s`}
                        repeatCount="indefinite"
                      />
                    </path>
                    <circle cx={startX} cy={startY} r="3" fill="white" opacity="0.6">
                      <animate attributeName="opacity" values="0.3;0.9;0.3" dur="3s" repeatCount="indefinite" />
                    </circle>
                  </g>
                );
              })}

              {/* Central Web3 Visualization */}
              <g transform="translate(900, 200)">
                <circle cx="0" cy="0" r="80" fill="url(#pulseGradient)" opacity="0.3">
                  <animate attributeName="r" values="60;100;60" dur="10s" repeatCount="indefinite" />
                </circle>
                <circle cx="0" cy="0" r="40" stroke="white" strokeWidth="2" fill="none" opacity="0.4">
                  <animate attributeName="stroke-dasharray" values="0,251;125,125;251,0" dur="6s" repeatCount="indefinite" />
                </circle>
                
                {/* Orbiting Nodes */}
                {[0, 60, 120, 180, 240, 300].map((angle, i) => (
                  <g key={`orbit-${i}`}>
                    <circle
                      cx={Math.cos(angle * Math.PI / 180) * 60}
                      cy={Math.sin(angle * Math.PI / 180) * 60}
                      r="4"
                      fill="white"
                      opacity="0.7"
                    >
                      <animateTransform
                        attributeName="transform"
                        type="rotate"
                        values={`0 0 0;360 0 0`}
                        dur="20s"
                        repeatCount="indefinite"
                      />
                    </circle>
                    <line
                      x1="0" y1="0"
                      x2={Math.cos(angle * Math.PI / 180) * 60}
                      y2={Math.sin(angle * Math.PI / 180) * 60}
                      stroke="white"
                      strokeWidth="1"
                      opacity="0.3"
                    />
                  </g>
                ))}
              </g>

              {/* Blockchain Visualization */}
              <g transform="translate(200, 500)">
                {[...Array(6)].map((_, i) => (
                  <g key={`block-${i}`} transform={`translate(${i * 60}, 0)`}>
                    <rect
                      x="-20" y="-20" width="40" height="40"
                      rx="5" fill="white" opacity="0.2"
                      stroke="white" strokeWidth="1"
                    >
                      <animate
                        attributeName="opacity"
                        values="0.1;0.4;0.1"
                        dur={`${3 + i}s`}
                        repeatCount="indefinite"
                      />
                    </rect>
                    {i < 5 && (
                      <line x1="20" y1="0" x2="40" y2="0" stroke="white" strokeWidth="2" opacity="0.3" />
                    )}
                  </g>
                ))}
              </g>
            </svg>
          </div>

          {/* Hero Content */}
          <div className="container mx-auto px-4 md:px-8 relative z-10">
            <div className="max-w-6xl flex flex-col lg:flex-row items-center">
              {/* Left side - Main heading */}
              <div className="lg:w-2/3 text-center lg:text-left">
                <div className="mb-6">
                  <span className="inline-block px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full text-white/90 text-sm font-medium border border-white/20">
                    🚀 Web3 Insights Hub
                  </span>
                </div>
                <h1 className="text-6xl md:text-8xl font-black text-white mb-8 leading-none tracking-tight">
                  Future{' '}
                  <span className="text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 via-blue-400 to-purple-400">
                    Tech
                  </span>
                  <br />
                  <span className="text-5xl md:text-6xl">Insights</span>
                </h1>
                <p className="text-xl md:text-2xl text-white/90 mb-12 leading-relaxed font-light max-w-3xl">
                  Explore the cutting-edge world of Web3, blockchain, AI, and decentralized technologies through our comprehensive guides and expert analysis.
                </p>
                <div className="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
                  <button className="px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-full hover:from-blue-700 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl hover:scale-105">
                    Explore Articles
                  </button>
                  <button className="px-8 py-4 bg-white/10 backdrop-blur-sm text-white font-semibold rounded-full border border-white/30 hover:bg-white/20 transition-all duration-300">
                    Join Community
                  </button>
                </div>
              </div>

              {/* Right side - Enhanced Subscription Form */}
              <div className="lg:w-1/3 mt-12 lg:mt-0">
                <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-8 border border-white/20 shadow-2xl">
                  <div className="text-center mb-6">
                    <div className="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                      <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" />
                      </svg>
                    </div>
                    <h3 className="text-2xl font-bold text-white mb-2">Join Web3 Revolution</h3>
                    <p className="text-white/80">Get exclusive insights delivered to your blockchain wallet</p>
                  </div>
                  
                  {isSubscribed ? (
                    <div className="text-center py-8">
                      <div className="w-20 h-20 mx-auto mb-4 bg-green-500/20 rounded-full flex items-center justify-center">
                        <svg className="w-10 h-10 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7" />
                        </svg>
                      </div>
                      <h4 className="text-xl font-semibold text-white mb-2">Welcome to the Future!</h4>
                      <p className="text-white/80 mb-4">You're now part of our decentralized community. Check your email for confirmation.</p>
                      <div className="p-3 bg-white/10 rounded-lg mb-4">
                        <p className="text-xs text-white/70">Wallet Address (Demo):</p>
                        <p className="text-sm font-mono text-cyan-300">{generateMockWeb3Address()}</p>
                      </div>
                      <button
                        onClick={() => setIsSubscribed(false)}
                        className="text-sm text-cyan-300 hover:text-cyan-200 font-medium transition-colors"
                      >
                        Subscribe another email
                      </button>
                    </div>
                  ) : (
                    <form onSubmit={handleSubmit} className="space-y-6">
                      <div className="space-y-4">
                        <div>
                          <label className="block text-sm font-medium text-white/90 mb-2">Email Address</label>
                          <input
                            type="email"
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                            required
                            className="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent backdrop-blur-sm"
                            placeholder="your@email.com"
                          />
                        </div>
                      </div>
                      <button
                        type="submit"
                        disabled={isLoading}
                        className={`w-full py-4 px-6 rounded-xl font-semibold text-white transition-all duration-300 ${
                          isLoading 
                            ? 'bg-purple-400/50 cursor-not-allowed'
                            : 'bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 shadow-lg hover:shadow-xl hover:scale-105'
                        }`}
                      >
                        {isLoading ? (
                          <div className="flex items-center justify-center">
                            <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                              <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                              <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                            Connecting to Web3...
                          </div>
                        ) : (
                          '🚀 Subscribe to Web3'
                        )}
                      </button>
                      <p className="text-xs text-white/60 text-center">
                        Powered by blockchain technology. We respect your privacy and never share your data.
                      </p>
                    </form>
                  )}
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Main Blog Content */}
        <div className="container mx-auto px-4 md:px-8 py-16">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-gray-800 mb-4">Latest Web3 & Tech Insights</h2>
            <p className="text-xl text-gray-600">Discover the future of technology through our expert analysis</p>
          </div>

          {/* 4 Columns Grid for Desktop, Responsive */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
            {blogPosts.map((post) => (
              <BlogCard key={post.id} post={post} />
            ))}
          </div>

          {/* Load More Section */}
          <div className="text-center mt-16">
            <button className="px-12 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-full hover:from-blue-700 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl hover:scale-105">
              Load More Articles
            </button>
          </div>
        </div>
      </div>
      <WideDiv />
    </>
  );
}

function BlogCard({ post }) {
  return (
    <div className="bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 hover:-translate-y-2 group">
      <div className="relative overflow-hidden">
        <img 
          src={post.imageUrl} 
          alt={post.title}
          className="w-full h-48 object-cover transition-transform duration-700 group-hover:scale-110"
          loading="lazy"
        />
        <div className="absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        <div className="absolute top-4 left-4">
          <span className="px-3 py-1 bg-white/90 backdrop-blur-sm text-xs font-semibold text-gray-800 rounded-full">
            {post.category}
          </span>
        </div>
      </div>
      
      <div className="p-6">
        <div className="flex items-center text-sm text-gray-500 mb-3">
          <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          <span>{post.date}</span>
          <span className="mx-2">•</span>
          <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>{post.readTime}</span>
        </div>
        
        <h3 className="text-lg font-bold text-gray-800 mb-3 line-clamp-2 group-hover:text-blue-600 transition-colors duration-300">
          {post.title}
        </h3>
        
        <div className="flex items-center justify-between">
          <a 
            href={post.slug}
            className="inline-flex items-center text-blue-600 font-semibold text-sm hover:text-blue-700 transition-colors duration-200"
          >
            Read More
            <svg className="w-4 h-4 ml-1 transition-transform duration-200 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
          <div className="flex space-x-2">
            <button className="p-2 text-gray-400 hover:text-red-500 transition-colors">
              <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
              </svg>
            </button>
            <button className="p-2 text-gray-400 hover:text-blue-500 transition-colors">
              <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}






//
 